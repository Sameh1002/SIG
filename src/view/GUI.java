package view;

import controller.*;
import model.*;
import java.util.ArrayList;
import java.util.Comparator;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;

public class GUI extends javax.swing.JFrame {

    private final ActionHandler handler;
    private ArrayList<InvoiceHeader> invoices;
    private InvoiceHeaderTable mainTable;
    private InvoiceDetailsTable sideTable;

    public GUI() {
        this.handler = new ActionHandler(this);

        initComponents();
    }

    private void handleSelectionEvent(ListSelectionEvent e) {
        if (e.getValueIsAdjusting()) {
            return;
        }
        if (e.getFirstIndex() < 0 || e.getLastIndex() < 0 || getSelectedHeaderIndex() < 0) {
            this.detailsTable.removeAll();
            return;
        }
        InvoiceHeader inv = this.invoices.get(getSelectedHeaderIndex());
        this.sideTable = new InvoiceDetailsTable(inv);
        this.detailsTable.setModel(this.sideTable);
        this.invoiceNumber.setText(String.valueOf(inv.getInvoiceNum()));
        this.invoiceDate.setText(inv.getInvoiceDate());
        this.customerName.setText(inv.getCustomerName());
        this.invoiceTotalLabel.setText(inv.getInvoiceTotal().toString());
    }

    private void refreshTables() {
        this.mainTable = new InvoiceHeaderTable(this.invoices);
        this.headerTable.setModel(mainTable);
        if (getSelectedHeaderIndex() < 0) {
            this.sideTable = new InvoiceDetailsTable(new InvoiceHeader());
            this.detailsTable.setModel(this.sideTable);
            this.invoiceNumber.setText("");
            this.invoiceDate.setText("");
            this.customerName.setText("");
            this.invoiceTotalLabel.setText("");
            return;
        }
        InvoiceHeader inv = this.invoices.get(getSelectedHeaderIndex());
        this.sideTable = new InvoiceDetailsTable(inv);
        this.detailsTable.setModel(this.sideTable);
        this.invoiceNumber.setText(String.valueOf(inv.getInvoiceNum()));
        this.invoiceDate.setText(inv.getInvoiceDate());
        this.customerName.setText(inv.getCustomerName());
        this.invoiceTotalLabel.setText(inv.getInvoiceTotal().toString());
    }

    public void setTables(ArrayList<InvoiceHeader> invoices) {
        this.invoices = invoices;

        mainTable = new InvoiceHeaderTable(this.invoices);
        headerTable.setModel(mainTable);
        headerTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        headerTable.getSelectionModel().addListSelectionListener((ListSelectionEvent e) -> {
            handleSelectionEvent(e);
        });

        refreshTables();
    }

    public void deleteInvoice(int index) {
        if (index > -1) {
            this.invoices.remove(index);
            this.refreshTables();
        }
    }

    public void addInvoice(InvoiceHeader invoice) {
        this.invoices.add(invoice);
        this.refreshTables();
        headerTable.changeSelection(invoices.size() - 1, 0, true, false);
    }

    public ArrayList<InvoiceHeader> getInvoices() {
        return invoices;
    }

    public InvoiceHeader getCurrentInvoice() {
        if (this.invoices.isEmpty()) {
            return null;
        }
        return this.invoices.get(getSelectedHeaderIndex());
    }

    public int getNextInvoiceNumber() {
        if (this.invoices.isEmpty()) {
            return 1;
        }
        int n = this.invoices.stream().max(Comparator.comparing(i -> i.getInvoiceNum())).get().getInvoiceNum();
        n++;
        return n;
    }

    public void deleteLine(int index) {
        if (index > -1) {
            this.invoices.get(getSelectedHeaderIndex()).getLines().remove(index);
            this.refreshTables();
        }
    }

    public void addLine(InvoiceLines line, int invoice) {
        this.invoices.get(getSelectedHeaderIndex()).getLines().add(line);
        this.refreshTables();
        this.headerTable.changeSelection(invoice, 0, true, false);
        this.detailsTable.changeSelection(invoices.get(invoice).getLines().size() - 1, 0, true, false);
    }

    public ArrayList<InvoiceLines> getLines() {
        ArrayList<InvoiceLines> lines = new ArrayList<>();
        for (InvoiceHeader h : invoices) {
            for (InvoiceLines l : h.getLines()) {
                lines.add(l);
            }
        }
        return lines;
    }

    public int getSelectedHeaderIndex() {
        return this.headerTable.getSelectedRow();
    }

    public int getSelectedLineIndex() {
        return this.detailsTable.getSelectedRow();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        invoiceTotal = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        headerTable = new javax.swing.JTable(this.mainTable);
        jScrollPane2 = new javax.swing.JScrollPane();
        detailsTable = new javax.swing.JTable(this.sideTable);
        createNewInvoice = new javax.swing.JButton();
        createNewInvoice.addActionListener(handler);
        deleteInvoice = new javax.swing.JButton();
        deleteInvoice.addActionListener(handler);
        save = new javax.swing.JButton();
        save.addActionListener(handler);
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        invoiceNumber = new javax.swing.JLabel();
        invoiceDate = new javax.swing.JTextField();
        customerName = new javax.swing.JTextField();
        delete = new javax.swing.JButton();
        delete.addActionListener(handler);
        invoiceTotalLabel = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        openFile = new javax.swing.JMenuItem();
        openFile.addActionListener(handler);
        saveFile = new javax.swing.JMenuItem();
        saveFile.addActionListener(handler);
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        exitProgram = new javax.swing.JMenuItem();
        exitProgram.addActionListener(handler);

        invoiceTotal.setText("null");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sales Invoice generator");

        headerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "No.", "Date", "Customer", "Total"
            }
        ));
        jScrollPane1.setViewportView(headerTable);
        if (headerTable.getColumnModel().getColumnCount() > 0) {
            headerTable.getColumnModel().getColumn(0).setHeaderValue("No.");
            headerTable.getColumnModel().getColumn(1).setHeaderValue("Date");
            headerTable.getColumnModel().getColumn(2).setHeaderValue("Customer");
            headerTable.getColumnModel().getColumn(3).setHeaderValue("Total");
        }

        detailsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "No.", "Item Name", "Item Price", "Count", "Item Total"
            }
        ));
        jScrollPane2.setViewportView(detailsTable);
        if (detailsTable.getColumnModel().getColumnCount() > 0) {
            detailsTable.getColumnModel().getColumn(0).setHeaderValue("No.");
            detailsTable.getColumnModel().getColumn(1).setHeaderValue("Item Name");
            detailsTable.getColumnModel().getColumn(2).setHeaderValue("Item Price");
            detailsTable.getColumnModel().getColumn(3).setHeaderValue("Count");
            detailsTable.getColumnModel().getColumn(4).setHeaderValue("Item Total");
        }

        createNewInvoice.setText("Create New Invoice");

        deleteInvoice.setText("Delete Invoice");

        save.setText("Create New Line");

        jLabel1.setText("Invoice Number");

        jLabel2.setText("Invoice Date");

        jLabel3.setText("Customer Name");

        jLabel4.setText("Invoice Total");

        jLabel5.setText("Invoice items");

        invoiceNumber.setText("null");

        invoiceDate.setText("null");

        customerName.setText("null");

        delete.setText("Delete Line");

        invoiceTotalLabel.setText("null");

        jMenu1.setText("File");

        openFile.setText("Open Files");
        jMenu1.add(openFile);

        saveFile.setText("Save Files");
        jMenu1.add(saveFile);
        jMenu1.add(jSeparator1);

        exitProgram.setText("Exit");
        jMenu1.add(exitProgram);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))
                                .addGap(48, 48, 48)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(invoiceNumber, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(invoiceDate)
                                    .addComponent(customerName)
                                    .addComponent(invoiceTotalLabel)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addComponent(createNewInvoice)
                        .addGap(85, 85, 85)
                        .addComponent(deleteInvoice)
                        .addGap(210, 210, 210)
                        .addComponent(save)
                        .addGap(177, 177, 177)
                        .addComponent(delete)))
                .addGap(16, 16, 16))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(invoiceNumber))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(invoiceDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(customerName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(invoiceTotalLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(63, 63, 63)
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 253, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteInvoice)
                    .addComponent(createNewInvoice)
                    .addComponent(save)
                    .addComponent(delete))
                .addGap(18, 18, 18))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws Exception {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton createNewInvoice;
    private javax.swing.JTextField customerName;
    private javax.swing.JButton delete;
    private javax.swing.JButton deleteInvoice;
    private javax.swing.JTable detailsTable;
    private javax.swing.JMenuItem exitProgram;
    private javax.swing.JTable headerTable;
    private javax.swing.JTextField invoiceDate;
    private javax.swing.JLabel invoiceNumber;
    private javax.swing.JLabel invoiceTotal;
    private javax.swing.JTextField invoiceTotalLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JMenuItem openFile;
    private javax.swing.JButton save;
    private javax.swing.JMenuItem saveFile;
    // End of variables declaration//GEN-END:variables

}
